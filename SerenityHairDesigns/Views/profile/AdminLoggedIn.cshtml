@model SerenityHairDesigns.Models.Employee
@{
	ViewBag.Title = "AdminLoggedIn";
}

<h2>@ViewBag.Title</h2>

@{
	SerenityHairDesigns.Models.Employee eCurrent = new SerenityHairDesigns.Models.Employee();
	eCurrent = eCurrent.GetEmployeeSession();
}

@if (eCurrent.IsEmployeeAuthenticated) { // already logged in
	<a class="center-admin" name="LogOut" href="~/Profile/SignOut">Log Out</a>
	<a class="center" name="EmployeeInfo">Employee Info</a>
	<a class="center" name="ScheduleAppointment">Schedule Appointment</a>
	<a class="center" name="ManageEmployees">Manage Employees</a> // Dont show Login button if employee is logged in
}


@using (Html.BeginForm("AdminLoggedIn", "Profile", FormMethod.Post, new { enctype = "multipart/form-data" })) {
	<div class="Admin-Profile">
		<p>To make changes to your profile enter your information below and click the Update button.</p>
		<div id="user-profile-image">
			@if (Model.UserImage != null) {
				if (Model.UserImage.ImageID > 0) {
					<div class="user-profile-image-container">
						<img class="user-profile-thumbnail" src="@string.Concat("data:Image/",
										Model.UserImage.FileExtension, ";base64,",
										Model.UserImage.BytesBase64)" />
					</div>
				}
			}
		</div>
		@Html.TextBoxFor(model => model.UserImage.ImageID, new { style = "display: none;" })
		<div id="user-profile-data">
			<div class="section">
				<div class="section">
					<div>User Profile Image</div>
					<div>
						<input class="profile-item" type="file" name="UserImage" id="UserImage" />
					</div>
				</div>
			</div>
			<div class="section">
				<div class="section">
					<div>@Html.LabelFor(model => model.strFirstName)</div>
					<div>@Html.TextBoxFor(model => model.strFirstName, new { @autofocus = "autofocus" })</div>
				</div>
				<div class="section">
					<div>@Html.LabelFor(model => model.strLastName)</div>
					<div>@Html.TextBoxFor(model => model.strLastName)</div>
				</div>
				<div class="section">
					<div>@Html.LabelFor(model => model.strPassword)</div>
					<div>@Html.TextBoxFor(model => model.strPassword, new { type = "password" })</div>
				</div>
				<div class="section">
					<div>@Html.LabelFor(model => model.strPhoneNumber)</div>
					<div>@Html.TextBoxFor(model => model.strPhoneNumber, new { type = "tel" })</div>					
				</div>
				<div class="section">
					<div>@Html.LabelFor(model => model.strEmailAddress)</div>
					<div>@Html.TextBoxFor(model => model.strEmailAddress)</div>
				</div>
				<div class="section">
					<div>@Html.LabelFor(model => model.strGender)</div>
					<div>@Html.DropDownListFor(model => model.strGender, new SelectList(new string[] { "Female", "Male", "Other" }, "Female"), htmlAttributes: new { @class = "form-control" })</div>
				</div>
			</div>
			<div class="section">
				<button class="button-action" id="btnUpdate" name="btnSubmit" value="update"><i class='far fa-save'></i> Update</button>
			</div>
		</div>

		<div class="Emp-Availability">
			<p class="Shift-Title">Edit Availability</p>
			<table>
				<tr>
					<td>
						<p class="Shift-Text">Shift Start Time:</p>
					</td>
					<td>
						<div><input type="datetime-local" textmode="Date"></div>
					</td>
				</tr>
				<tr>
					<td>
						<p class="Shift-Text">Shift End Time:</p>
					</td>
					<td>
						<div><input type="datetime-local" textmode="Date"></div>
					</td>
				</tr>
			</table>
			<div class="section">
				<button class="button-action" id="btnEditAvailability" name="btnSubmit" value="EditAvailability"><i class='far fa-save'></i> Add Availability</button>
			</div>
		</div>

	</div>
}